// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.BetView = (function(superClass) {
    extend(BetView, superClass);

    function BetView() {
      return BetView.__super__.constructor.apply(this, arguments);
    }

    BetView.prototype.className = 'betting';

    BetView.prototype.template = _.template('<input class="betInput"> <button class="placeBet">Place Bet</button>' + ' Chip Count:' + ' $<span class="moneyLeft"><%= money %></span> <br><br>');

    BetView.prototype.initialize = function() {
      this.render();
      this.model.on('youWon', (function(_this) {
        return function() {
          return _this.youWon();
        };
      })(this));
      return this.model.on('youTied', (function(_this) {
        return function() {
          return _this.youTied();
        };
      })(this));
    };

    BetView.prototype.events = {
      'click .placeBet': 'betPlaced'
    };

    BetView.prototype.render = function() {
      return this.$el.html(this.template(this.model.attributes));
    };

    BetView.prototype.updateOnKeyDown = function() {
      return this.model.set('money', this.model.get('money') - $('.betInput').val());
    };

    BetView.prototype.betPlaced = function() {
      var amountBet;
      amountBet = $('.betInput').val();
      this.model.set('money', this.model.get('money') - amountBet);
      this.model.set('betAmount', amountBet);
      this.render();
      return $('.placeBet').attr('disabled', true);
    };

    BetView.prototype.youWon = function() {
      this.model.set('money', this.model.get('money') + (this.model.get('betAmount') * 2));
      this.render();
      return $('.placeBet').attr('disabled', true);
    };

    BetView.prototype.youTied = function() {
      this.model.set('money', this.model.get('money') + (this.model.get('betAmount')));
      this.render();
      return $('.placeBet').attr('disabled', true);
    };

    return BetView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=BetView.js.map
