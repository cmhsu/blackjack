// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.BettingView = (function(superClass) {
    extend(BettingView, superClass);

    function BettingView() {
      return BettingView.__super__.constructor.apply(this, arguments);
    }

    BettingView.prototype.template = _.template('<div class="betWrap"><input> <button class="Bet">Bet</button> $<span class="chips"><%= chips %></span></div>');

    BettingView.prototype.initialize = function() {
      return this.render();
    };

    BettingView.prototype.events = {
      'keyup input': function() {
        return this.updateChips();
      },
      'click .Bet': function() {
        return this.setBet();
      }
    };

    BettingView.prototype.render = function() {
      return this.$el.html(this.template(this.model.attributes));
    };

    BettingView.prototype.updateChips = function() {
      var chipDiff;
      chipDiff = this.model.get('chips') - $('input').val();
      return $('.chips').text(chipDiff);
    };

    BettingView.prototype.setBet = function() {
      var betted;
      betted = $('input').val();
      this.model.set('chips', this.model.get('chips') - betted);
      $('input').val('');
      $('.chips').text(this.model.get('chips'));
      $('.chips').after('<span><br><br>Betted: $' + betted + '</span>');
      $('.Bet').detach();
      $('input').detach();
      return this.model.trigger('betSet', this);
    };

    return BettingView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=BettingView.js.map
